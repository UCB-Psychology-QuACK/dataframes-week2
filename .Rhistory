library(lubridate)
# Download raw data -------------------------------------------------------
# Adelie penguin data from: https://doi.org/10.6073/pasta/abc50eed9138b75f54eaada0841b9b86
uri_adelie <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff"
# Gentoo penguin data from: https://doi.org/10.6073/pasta/2b1cff60f81640f182433d23e68541ce
uri_gentoo <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.220.3&entityid=e03b43c924f226486f2f0ab6709d2381"
# Chinstrap penguin data from: https://doi.org/10.6073/pasta/409c808f8fc9899d02401bdb04580af7
uri_chinstrap <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.221.2&entityid=fe853aa8f7a59aa84cdd3197619ef462"
# Combining the URIs
uris <- c(uri_adelie, uri_gentoo, uri_chinstrap)
# Downloading and importing data
penguins_raw_df <- uris %>%
map_dfr(read_csv, na = c("", "NA", "."), col_types = list()) %>%
as.data.frame()
write_csv(penguins_raw_df, here::here("inst", "extdata", "penguins_raw.csv"))
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
# Download raw data -------------------------------------------------------
# Adelie penguin data from: https://doi.org/10.6073/pasta/abc50eed9138b75f54eaada0841b9b86
uri_adelie <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.219.3&entityid=002f3893385f710df69eeebe893144ff"
# Gentoo penguin data from: https://doi.org/10.6073/pasta/2b1cff60f81640f182433d23e68541ce
uri_gentoo <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.220.3&entityid=e03b43c924f226486f2f0ab6709d2381"
# Chinstrap penguin data from: https://doi.org/10.6073/pasta/409c808f8fc9899d02401bdb04580af7
uri_chinstrap <- "https://portal.edirepository.org/nis/dataviewer?packageid=knb-lter-pal.221.2&entityid=fe853aa8f7a59aa84cdd3197619ef462"
# Combining the URIs
uris <- c(uri_adelie, uri_gentoo, uri_chinstrap)
# Downloading and importing data
penguins_raw_df <- uris %>%
map_dfr(read_csv, na = c("", "NA", "."), col_types = list()) %>%
as.data.frame()
write_csv(penguins_raw_df,file= "penguins_raw.csv")
write_csv(penguins_raw_df, "penguins_raw.csv")
penguins_df <- penguins_raw_df %>%
clean_names() %>%
mutate(species_short = word(species, 1)) %>%
mutate(sex = tolower(sex)) %>%
mutate(year = as.integer(lubridate::year(date_egg))) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(flipper_length_mm = as.integer(flipper_length_mm)) %>%
mutate(body_mass_g = as.integer(body_mass_g)) %>%
rename(bill_length_mm = culmen_length_mm,
bill_depth_mm = culmen_depth_mm) %>%
select(species_short,
island,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g,
sex,
year) %>%
rename(species = species_short) %>%
as.data.frame()
setwd(~/Desktop/pamerpenguins-master)
penguins_df <- penguins_raw_df %>%
clean_names() %>%
mutate(species_short = word(species, 1)) %>%
mutate(sex = tolower(sex)) %>%
mutate(year = as.integer(lubridate::year(date_egg))) %>%
mutate(across(where(is.character), as.factor)) %>%
mutate(flipper_length_mm = as.integer(flipper_length_mm)) %>%
mutate(body_mass_g = as.integer(body_mass_g)) %>%
rename(bill_length_mm = culmen_length_mm,
bill_depth_mm = culmen_depth_mm) %>%
select(species_short,
island,
bill_length_mm,
bill_depth_mm,
flipper_length_mm,
body_mass_g,
sex,
year) %>%
rename(species = species_short) %>%
as.data.frame()
setwd(~/Desktop/pamerpenguins-master)
setwd('~/Desktop/pamerpenguins-master')
#### load your data into R ####
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
data = penguins
libaray(palmerpenguins)
library(palmerpenguins)
?penguins
install.packages(palmerpenguins)
# Find your current directory
getwd()
setwd('~/Desktop')
install.packages(palmerpenguins)
install.packages("palmerpenguins")
libaray(palermpenguins)
library(palermpenguins)
library(palmerpenguins)
penguins
df = penguins
list.files()
df = penguins
write.csv(df, "penguins.csv")
options(stringsAsFactors=FALSE)
library(palmerpenguins)
#### Figure out where you are ####
# Find your current directory
getwd()
# If you're in the wrong place, change your working directory to the folder with your data
setwd('~/Desktop')
read.csv(' penguins')
read.csv(' penguins.csv')
read.csv('penguins.csv')
penguins <- read.csv('penguins.csv')
penguing_tab <- read.table(file = "penguins.csv", sep, header)
penguing_tab <- read.table(file = "penguins.csv", sep) # this is a more universal way to read in data.
penguing_tab <- read.table(file = "penguins.csv", ) # this is a more universal way to read in data.
View(penguing_tab)
penguing_tab <- read.table(file = "penguins.csv", sep = ",") # this is a more universal way to read in data.
View(penguing_tab)
penguing_tab <- read.table(file = "penguins.csv", header = TRUE, sep = ",")
# First few rows
head(penguins)
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
penguins <- read.csv('penguins.csv')
penguins <- read.csv('penguins.csv')
head(penguins)
# Last few rows
tail(penguins)
View(penguins)
# what are the column names
cols(penguins)
# what are the column names
colnames(penguins)
length(penguins)
# how many rows?
nrow(penguins)
ncol(penguins)
str(penguins)
options(stringsAsFactors=TRUE)
penguins <- read.csv('penguins.csv')
str(penguins)
df = penguins
df$penguin = "n" + df$penguin
df$penguin = "n" + as.string(df$penguin)
df$penguin = "p" + as.character(df$penguin)
df$penguin =  as.character(df$penguin)
df$penguin =  "p" + df$penguin
df$penguin = paste("p", df$penguin, sep="")
write.csv(df, "penguin.csv")
str(penguins)
# QuACK 2020
# Week 2 - Github and Dataframes
# Willa Voorhies
options(stringsAsFactors=TRUE)
library(palmerpenguins)
#### Figure out where you are ####
# Find your current directory
getwd()
# If you're in the wrong place, change your working directory to the folder with your data
setwd('~/Desktop')
# see the files in your directory
list.files()
#### load your data into R ####
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
penguins <- read.csv('penguin.csv')
penguin.tab <- read.table(file = "penguin.csv", header = TRUE, sep = ",") # this is a more universal way to read in data.
# What if my data isn't in my working directory?
# add the full path or change my directory.
#### view your data ####
# First few rows
head(penguins)
# Last few rows
tail(penguins)
# what are the column names
colnames(penguins)
# how many rows?
nrow(penguins)
# how many columns?
ncol(penguins)
length(penguins) # unlike other languages, length tells you the number of columns
# what is the structure of this dataframe?
str(penguins)
options(stringsAsFactors=FALSE)
as.factor(penguins$species, penguins$island, penguins$sex)
as.factor(penguins$species, penguins$island, penguins$sex)
as.factor(penguins$species)
penguins[2:3] <- as.factor(penguins[2:3])
str(penguins)
data(ChickWeight)
head(ChickenWeight)
head(ChickWeight)
write.csv(ChickWeight, "chickWeight.csv")
data("HairEyeColor")
write.csv(HairEyeColor,"HairEyeColor.csv")
View(sleep)
view(mtcars)
write.csv(mtcars, "mtcars.csv")
cars <- read.csv('mtcars.csv')
cars.tab <- read.table(file = "mtcars.csv", header = TRUE, sep = ",") # this is a more universal way to read in data.
# First few rows
head(cars)
# Last few rows
tail(cars)
colnames(cars)
str(cars)
as.factor(cars$cyl)
cars$cyl<- as.factor(cars$cy)
str(cars)
levels(cars$cyl)
# how do we access a specific column
cars$cyl
cars$cyl
# how do we access a specific column
cars$cyl
# how do we access a specific column
view(cars$cyl)
View(cars)
# Select all rows in the car column using indexing
cars[,1]
# Select all rows in the car column using indexing
car.col <- cars[,1]
# Select all rows in the car column using indexing
(car.col <- cars[,1])
# Select all rows of  car and mpg column using indexing
car.mpg<- cars[,c(1,2)]
# Select the petal.width and Petal.Length and species for  ONLY the first three cars
car.mpg <- cars[1:3 ,c(1,2)]
# Select the petal.width and Petal.Length and species for  ONLY the first three cars
(car.mpg <- cars[1:3 ,c(1,2)])
# Select the petal.width and Petal.Length and species for  ONLY the first three cars
(car.mpg <- cars[c(1,2,3) ,c(1,2)])
car.col = cars$cyl
(car.col = cars$cyl)
(car.col = cars[cars$cyl])
(car.col = cars$cyl)
(car.col = cars$car)
(car.col = cars[c(cars$car, cars$cyl)]
dfsad
(car.col = cars[, c(cars$car, cars$cyl)]
(car.col = cars[, c(cars$car, cars$cyl)]
dfasd
(car.col = cars[, c(cars$car, cars$cyl)])
(car.col = cars[,c(cars$car, cars$cyl)])
(car.col = cars[(cars$car, cars$cyl)])
(car.col = cars[cars$car])
(car.col = cars[,cars$car])
(car.col = c(cars$cyl, cars$car)
)
(car.col = c(cars$cyl, cars$car)
(car.col = c(cars$cyl, cars$car))
)
(car.col = c(cars$cyl, cars$car))
View(car.col)
(car.col = select(cars$cyl, cars$car)
)
car.col = select(cars$cyl, cars$car)
# check if it worked
cars[is.na(cars)]
cars[is.na(cars)]
cars[!complete.cases(cars),]
#remove the missing data
cars <- na.omit(cars)
# check if it worked
cars[is.na(cars)]
table(cars$cyl)
# Lets get the mean mpg
mean(cars$mpg)
summarise((cars))
# quick way to get a bunch of info on a column
summary(cars$mpg)
mean(cars$mpg[cars$mpg == "6"])
mean(cars$mpg[cars$mpg == 6])
mean(cars$mpg[cars$cyl == 6])
car.mpg <- cars$mpg[4,]
car.mpg <- cars$mpg[,]
car.mpg <- cars$mpg[4]
car$mpg[1:3]
cars$mpg[1:3]
cars[cars$cars[1:3], cars$cyl[1:3]]
cars(cars$cars[1:3], cars$cyl[1:3])
cars(cars$cars[1:3])
cars(cars$car[1:3], cars$cyl[1:3])
cars[cars$car[1:3], cars$cyl[1:3]]
meanMPG <- with(cars, mean(mpg[cyl == "6"]))
# lets make a table
table(cars$cyl)
# lets make a table
table(cars$car)
# lets make a table
table(cars$car, cars$mpg)
# lets make a table
table(cars$car, cars$cyl)
# lets make a table
table(cars$cyl, cars$car)
# lets make a table
table(cars$mpg, cars$car)
cars$cyl<- as.factor(cars$cyl)
str(cars)
cars$gear<- as.factor(cars$gear)
str(cars)
# lets make a table
table(cars$mpg, cars$gear)
table(cars$cyl, cars$gear)
# i. what is your current working directory
getwd()
setwd('~/Desktop/')
read.csv('penguin.csv')
penguins <- read.csv('penguin.csv')
colnames(penguins)
ncol(penguins)
nrow(penguin)
str(penguins)
penguins$species <- as.factor(penguins$species)
penguins$species <- as.factor(penguins$species)
penguins$species <- as.factor(penguins$island)
penguins$species <- as.factor(penguins$sex)
penguins[is.na(penguins)]
penguins <- na.omit(penguins)
# i. Pull the all available info for penguin p5
p5 <- penguins[5,]
View(p5)
View(penguins)
# i. Pull the all available info for penguin p5
p5 <- penguins[5,]
p5
# i. Pull the all available info for penguin p5
p5 <- penguins[4,]
p5 <- penguins[penguin$penguin=='p5'] # better move
p5 <- penguins[penguins$penguin=='p5'] # better move
View(p5)
p5 <- penguins[penguins$penguin=='p5', ]
View(p5)
p18_weight<-penguins$body_mass_g[penguins$penguin=='p18']
p38_weight<-penguins$body_mass_g[penguins$penguin=='p38']
#### 6. what islands do most of the Adelie species live on? ####
table(penguins$species, penguins$island)
penguin$species
penguins$species
View(penguins)
# QuACK 2020
# Week 2 - Github and Dataframes
# Data practice
options(stringsAsFactors=FALSE)
############################### Group practice #####################################################
# the goal is for you guys to work together to figure out some info about this dataset.
# try to get all the info from R (ie. don't open the csv file in excel).
####################################################################################################
#### 1.  setup your directory ####
# i. what is your current working directory
getwd()
# ii. set your wd to the folder with the data and R script.
setwd('~/Desktop/')
#### 2. Load penguin.csv ####
penguins <- read.csv('penguin.csv')
#### 3. Get some general info about the dataframe ####
# You can use any commands to get this info. Try to use R commands, don't just open up the dataframe and look.
# i.what are the column names
colnames(penguins)
# ii. how many columns are there?
ncol(penguins)
length(penguins)
# iii. how many rows?
nrow(penguins)
# iv. what are the datatypes in this dataframe?
str(penguins)
# v. are there any that would be better as factors? Change them!
penguins$species <- as.factor(penguins$species)
penguins$island <- as.factor(penguins$island)
penguins$sex<- as.factor(penguins$sex)
table(penguins$species, penguins$island)
mean(penguins$bill_length_mm[penguins$species == "Adelie"])
# i. are there any missing values?
penguins[is.na(penguins)]
# ii. remove those penguins!
penguins <- na.omit(penguins)
mean(penguins$bill_length_mm[penguins$species == "Adelie"])
mean(penguins$bill_length_mm[penguins$species == "Gentoo"])
#### 8. On average, are male or female penguins bigger?
mean(with (penguins,mean(body_mass_g[sex == "male"]))
males<-with(penguins,mean(body_mass_g[sex == "male"]))
males<-with(penguins,mean(body_mass_g[sex == "male"]))
females<-with(penguins,mean(body_mass_g[sex == "female"]))
females<-with(penguins,mean(body_mass_g[sex == "female"]))
females
males
penguins$cuteness.rating <- rep(10)
View(penguins)
(car.mpg <- [c(1:3) ,c(1,2)])
(car.mpg <- cars[c(1:3) ,c(1,2)])
gold.in.2015<-100800
gold.in.2015<- gold.in.2015 + 800
(gold.in.2015<- gold.in.2015 + 800)
v1 <- c(1,2,3,4,5)
V2 <- 1:5
V3 <- seq(1,5)
seq(2.1, 8.1)
a <- rep(1:5, 10)
length(a)
clear
clc
gold.in.2015<-100800
(gold.in.2015<-100,800)
(gold.in.2015<-100800)
(gold.in.2015<-gold.in.2015+800)
a <- 10
a + 15
a
a + 15
a
# 4) Create the vector [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] in three ways: once using c(), once using a:b, and once using seq(). Assign one of these ways to a vector named x. [HINT: Remember you can use ?seq to see what arguments seq takes!]
v1 <- c(1:10)
v1 <- c(1:10)
v2 <- c(1,2,3,4,5,6,7,8,9,10)
v3<-seq(1,10)
v1
v2
v3
v1 <- 1:10
v1
x1 <- 1:10
x2 <- c(1,2,3,4,5,6,7,8,9,10)
x3<-seq(1,10)
y <- x1 + 8
y
y1 <- x1 *2
y1
x1 + x1
y<-x+9:0
y<-x1+9:0
y
9:0
x1
# 8) Create the vector [2.1, 4.1, 6.1, 8.1] in two ways using c() and  seq() with a by argument.
c(2.1, 4.1, 6.1, 8.1)
seq(2.1, 8.1, by = 2)
seq(2.1, 8.1, 2)
# 9) Create a vector that repeats the integers from 1 to 5, 10 times. That is [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, .]. The length of the vector should be 50!
v <- rep(1:5, times=10)
length(v)
v<-rep(1:5,each=10)
v
length(v)
# Find your current directory
getwd()
# If you're in the wrong place, change your working directory to the folder with your data
setwd('~/dataframes-week2')
# see the files in your directory
list.file()
# see the files in your directory
list.files()
#### load your data into R ####
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
cars <- read.csv('~/dataframes-week2/mtcars.csv')
cars <- read.csv('~/dataframes-week2/mtcars.csv')
cars <- read.table(file = 'mtcars.csv', header = TRUE, sep = ',')
# First few rows
head(cars)
# First few rows
head(cars, 10)
tail(cars)
ncol(cars)
length(cars)
# what are the column names
colnames(cars)
# what are the column names
colname <- colnames(cars)
colname[1]
nrow(cars)
View(cars)
str(cars)
options(stringsAsFactors=TRUE)
str(cars)
str(cars)
options(stringsAsFactors=TRUE)
str(cars)
# If you're in the wrong place, change your working directory to the folder with your data
setwd('~/dataframes-week2')
# see the files in your directory
list.files()
#### load your data into R ####
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
cars <- read.csv('mtcars.csv')
str(cars)
options(stringsAsFactors=FALSE)
# see the files in your directory
list.files()
#### load your data into R ####
# Note: It's best to read in a txt file or a .csv. This avoids issues with unrecognized data types etc.,
cars <- read.csv('mtcars.csv')
str(cars)
cars$cyl <- as.factor(cars$cyl)
cars$gear <- as.factor(cars$gear)
str(cars)
# What are the levels of the factor
levels(gear)
# What are the levels of the factor
levels(cars$gear)
car.col <-cars[1]
car.col
car.col <-cars[, 1]
car.col
car.col <-cars[1]
car.col <-cars[,1]
cars.mpg<- cars[,c(1,2)]
View(cars.mpg)
cars.mpg<- cars[3, c(1,2)]
# Is there missing data?
str(cars)
# Is there missing data?
summary(cars)
table(cars$cyl, cars$gear)
# Lets get the mean mpg
mean(cars$mg)
# Lets get the mean mpg
mean(cars$mpg)
mean(cars$mpg[cars$cyl]==6)
mean(cars$mpg[cars$cyl==6])
